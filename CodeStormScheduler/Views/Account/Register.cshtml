@using CodeStormScheduler.Models
@model CodeStormScheduler.Models.RegisterViewModel

@{
    Layout = null;
}


<!DOCTYPE html>
<!--[if IE 8]>         <html class="ie8"> <![endif]-->
<!--[if IE 9]>         <html class="ie9 gt-ie8"> <![endif]-->
<!--[if gt IE 9]><!-->
<html class="gt-ie8 gt-ie9 not-ie">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <base href="/">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Sign Up</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">

    <!-- Open Sans font from Google CDN -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,400,600,700,300&subset=latin" rel="stylesheet" type="text/css">

    <!-- Pixel Admin's stylesheets -->
    @Styles.Render("~/Content/PixelAdmin")
    @Styles.Render("~/Content/Custom")
    <link href="~/Content/Register.css" rel="stylesheet" />
    <!--[if lt IE 9]>
        <script src="assets/javascripts/ie.min.js"></script>
    <![endif]-->
    <!-- $DEMO =========================================================================================

        Remove this section on production
    -->
    <style>
        #signup-demo {
            position: fixed;
            right: 0;
            bottom: 0;
            z-index: 10000;
            background: rgba(0,0,0,.6);
            padding: 6px;
            border-radius: 3px;
        }

            #signup-demo img {
                cursor: pointer;
                height: 40px;
            }

                #signup-demo img:hover {
                    opacity: .5;
                }

            #signup-demo div {
                color: #fff;
                font-size: 10px;
                font-weight: 600;
                padding-bottom: 6px;
            }

        .has-feedback .form-control-feedback {
            top: 10px;
            line-height: initial;
        }

        .has-info .form-control-feedback {
            color: #24A1DB;
        }

        .has-error input {
            border-color: #d8687a;
            -webkit-box-shadow: none;
            box-shadow: none;
        }

            .has-error input:focus {
                border-color: #d8687a !important;
                -webkit-box-shadow: none !important;
                box-shadow: none !important;
            }

        .has-error .jquery-validate-error {
            color: #b94a48 !important;
            font-size: 12px;
            font-family: 'Open Sans';
            display: inline;
        }
    </style>
    <!-- / $DEMO -->

</head>


<!-- 1. $BODY ======================================================================================

    Body

    Classes:
    * 'theme-{THEME NAME}'
    * 'right-to-left'     - Sets text direction to right-to-left
-->
<body class="theme-default page-signup">

    <script>
        var init = [];
    </script>
    <!-- Demo script -->
    <script src="~/Scripts/PixelAdmin/demo.js"></script>
    <!-- Page background -->
    <div id="page-signup-bg">
        <!-- Background overlay -->
        <div class="overlay"></div>
        <!-- Replace this with your bg image -->
        <img src="assets/demo/signin-bg-1.jpg" alt="">
    </div>
    <div class="news-caption hidden-xs hidden-sm">
        <h4 class="caption-title">CodeStorm Scheduler</h4>
        <p>
            As a Color Admin Apps administrator, you use the Color Admin console to manage your organization’s account, such as add new users, manage security settings, and turn on the services you want your team to access.
        </p>
    </div>
    <!-- / Page background -->
    <!-- Container -->
    <div class="signup-container">
        <!-- Header -->
        <div class="signup-header">
            <a href="index.html" class="logo">
                <img src="assets/demo/logo-big.png" alt="" style="margin-top: -5px;">&nbsp;
                CodeStorm
            </a> <!-- / .logo -->
            <div class="slogan">
                Simple. Flexible. Powerful.
            </div> <!-- / .slogan -->
        </div>
        <!-- / Header -->
        <!-- Form -->
        <div class="signup-form">
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form", id = "signup-form_id" }))
            {
                @Html.AntiForgeryToken()
                <div class="signup-text">
                    <span>Create an account</span>
                </div>
                <div id="email-error" style="display: none">
                    <div class="alert alert-danger alert-sm">
                        Email address already exists.!<br />
                        <span class="text-warning">Do you alreay have a account ? </span> <a href="/Account/Login"><strong>Sign In Here</strong></a>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-xs-12 col-md-6 signup-fname">
                        <div class="form-group w-icon has-info has-feedback">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control cs_userfname", placeholder = "First Name" })
                            @*<input type="text" name="signup_email" id="email_id" class="form-control input-lg" placeholder="E-mail">*@
                        </div>
                    </div>
                    <div class="col-xs-12 col-md-6 signup-lname">
                        <div class="form-group w-icon has-info has-feedback">
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control cs_userlname", placeholder = "Last Name" })
                            @*<input type="text" name="signup_email" id="email_id" class="form-control input-lg" placeholder="E-mail">*@
                        </div>
                    </div>
                </div>

                <div class="form-group w-icon has-info has-feedback">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control cs_useremail", placeholder = "E-mail" })
                    @*<input type="text" name="signup_email" id="email_id" class="form-control input-lg" placeholder="E-mail">*@
                    <span class="fa fa-envelope signup-form-icon"></span>
                </div>

                <div class="form-group w-icon has-info has-feedback">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                    @*<input type="password" name="signup_password" id="password_id" class="form-control input-lg" placeholder="Password">*@
                    <span class="fa fa-lock signup-form-icon"></span>
                </div>

                <div class="form-group w-icon has-info has-feedback">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = " Confirm Password" })
                    @*<input type="password" name="signup_retype_password" id="password_retype_id" class="form-control input-lg" placeholder=" Confirm Password">*@
                    <span class="fa fa-lock signup-form-icon"></span>
                </div>

                <div class="form-group" style="margin-top: 20px; margin-bottom: 20px;">
                    <label class="checkbox-inline">
                        <input type="checkbox" name="signup_confirm" class="px" id="signup_confirm">
                        <span class="lbl">I agree with the <a href="#" target="_blank">Terms and Conditions</a></span>
                    </label>
                </div>

                <div class="form-actions">
                    <button type="submit" class="signup-btn bg-primary" id="btnSignUp">SIGN UP</button>
                </div>
            }
            <!-- / Form -->
            <!-- "Sign In with" block -->
            <div class="signup-with">
                <!-- Facebook -->
                @Html.Partial("_ExternalSignUpPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </div>
            <!-- / "Sign In with" block -->
        </div>
        <!-- Right side -->
        <div class="existing-member">
            Already a member? Click <a href="/Account/Login">here</a> to login.
        </div>
    </div>

    @*<div class="have-account">
            Already have an account? <a href="/Account/Login">Sign In</a>
        </div>*@


    <!-- Get jQuery from Google CDN -->
    <!--[if !IE]> -->
    <script type="text/javascript"> window.jQuery || document.write('<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js">' + "<" + "/script>"); </script>
    <!-- <![endif]-->
    <!--[if lte IE 9]>
        <script type="text/javascript"> window.jQuery || document.write('<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js">'+"<"+"/script>"); </script>
    <![endif]-->
    <!-- Pixel Admin's javascripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/pixeladmin")
    @Scripts.Render("~/bundles/plugins")

    <script type="text/javascript">
        // Resize BG
        init.push(function () {
            var $ph = $('#page-signup-bg'),
                $img = $ph.find('> img');

            $(window).on('resize', function () {
                $img.attr('style', '');
                if ($img.height() < $ph.height()) {
                    $img.css({
                        height: '100%',
                        width: 'auto'
                    });
                }
            });
        });

        window.PixelAdmin.start(init);
    </script>
    <script>
        $('#signup-form_id').validate({
            onsubmit: false,
            rules: {
                FirstName: {
                    required: true
                },
                LastName: {
                    required: true
                },
                Email: {
                    required: true,
                    email: true
                },
                Password: {
                    required: true,
                    minlength: 5
                },
                ConfirmPassword: {
                    equalTo: "#Password"
                },
                signup_confirm: "required"
            },
            messages: {
                FirstName: {
                    required: "First Name is required"
                },
                LastName: {
                    required: "Last Name is required"
                },
                Email: {
                    required: "Email is required",
                    email: "Invalid Email address"
                },
                Password: {
                    required: "Password is required",
                    minlength: "Require at least 5 characters"
                },
                ConfirmPassword: {
                    equalTo: "Passwords does not match"
                },
                signup_confirm: ""
            },
            errorPlacement: function (error, element) {
                element.parent().append(error);
            }
        });

        $('#btnSignUp').click(function () {
            var form = $("#signup-form_id");
            if (!form.valid()) {
                return false;
            }
            return true;
        });

        $('#Email').on('input', function (e) {
            //$('#Email').validate({
            //    rules: {
            //        Email: {
            //            email: true
            //        }
            //    }
            //});
            //var email = $("#Email");
            //if (email.valid()) {
            //    alert('valid');
            //}
            //if ($("#signup-form_id").validate().element($("#Email"))) {

            //    if ($("#Email").valid()) {
            //        alert('valid');
            //    }
            //}
        });
        $(document).ready(function () {
            var msg = '@ViewBag.ErrorMessage';
            if (msg == "Email") {
                $('#email-error').show();
                $('#email-error').addClass('animated fadeIn');
            }
        });
    </script>
</body>
</html>
