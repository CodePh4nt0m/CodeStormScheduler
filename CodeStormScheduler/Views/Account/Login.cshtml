@using CodeStormScheduler.Models
@model LoginViewModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="UTF-8">
    <meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no' name='viewport'>
    <title>CodeStorm</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <link href="~/plugins/font-awesome/css/font-awesome.min.css" rel="stylesheet"/>
    <link href="~/Content/animate.css" rel="stylesheet" />
    <link href="~/Content/AdminLTE/AdminLTE.min.css" rel="stylesheet"/>
    <link href="~/plugins/iCheck/square/blue.css" rel="stylesheet"/>
    <link href="~/Content/login.css" rel="stylesheet" />
    <style>
        
    </style>
</head>
<body class="login-page">
    <div class="login-box">
        <div class="login-logo">
            <img src="~/img/site/textonly.png" />
        </div><!-- /.login-logo -->
        <div class="login-box-body">
            <p class="login-box-msg">Sign in to start your session</p>
            @using (Html.BeginForm("Login", "Account", FormMethod.Post, new {role = "form", id = "loginForm"}))
            {
                @Html.AntiForgeryToken()
                <div class="form-group has-feedback">
                    @Html.TextBoxFor(m => m.Email, new {@class = "form-control", placeholder = "Email"})
                    <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                </div>
                <div class="form-group has-feedback">
                    @Html.PasswordFor(m => m.Password, new {@class = "form-control", placeholder = "Password"})
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                </div>
                <div class="row">
                    <div class="col-xs-8">
                        <div class="checkbox icheck">
                            <label>
                                @Html.CheckBoxFor(m => m.RememberMe) Remember Me
                            </label>
                        </div>
                    </div><!-- /.col -->
                    <div class="col-xs-4">

                    </div><!-- /.col -->
                </div>
                <div class="row login-submit">
                    <div class="col-xs-12">
                        <button type="submit" class="btn btn-primary btn-block btn-flat" id="btnSignIn">SIGN IN</button>
                    </div>
                </div>
            }
            @*<div class="social-auth-links text-center">
                <p>- OR -</p>
                <a href="#" class="btn btn-block btn-social btn-facebook btn-flat"><i class="fa fa-facebook"></i> Sign in using Facebook</a>
                <a href="#" class="btn btn-block btn-social btn-google-plus btn-flat"><i class="fa fa-google-plus"></i> Sign in using Google+</a>
            </div>*@
            <div class="row forgotpass-container">
                <div class="col-xs-12">
                    <a href="#" id="forgotpass">Forgot password ?</a>
                </div>
            </div>
            @*<a href="register.html" class="text-center">Register a new membership</a>*@
        </div><!-- /.login-box-body -->
    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/plugins/iCheck/icheck.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script>
    $(function () {
        $('input').iCheck({
            checkboxClass: 'icheckbox_square-blue',
            radioClass: 'iradio_square-blue',
            increaseArea: '20%' // optional
        });
    });
    $(document).ready(function () {
        $('#btnSignIn').click(function (event) {
            //alert();
            var form = $('#loginForm');
            if (!form.valid()) {
                $('.login-box').addClass('animated shake');
                setTimeout((function () { $('.login-box').removeClass('animated shake'); }), 4000);
            }
           
        });
    });
    $('#loginForm').validate({
        rules: {
            Email: {
                required: true,
                email: true
            },
            Password: "required"
        },
        messages: {
            Email: {
                required: "Email is required",
                email: "Please enter a valid email address"
            },
            Password: "Password is required"
        },
        errorPlacement: function (error, element) {
            element.parent().append(error);
        }
    });
    </script>
</body>
</html>
